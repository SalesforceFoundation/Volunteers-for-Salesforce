<!-- 
    Copyright (c) 2016, Salesforce.org
    All rights reserved.
    
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:
    
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Salesforce.org nor the names of
      its contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.
 
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
    POSSIBILITY OF SUCH DAMAGE.
-->  

 
<apex:page controller="VOL_CTRL_VolunteersJobListingFS" language="{!strLanguage}" showheader="false" sidebar="false" standardStylesheets="false" cache="false">

<apex:includeScript value="{!URLFOR($Resource.jQueryFiles, 'js/jquery-3.2.1.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jQueryFiles, 'js/jquery-ui-1.12.1.custom.min.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.jQueryFiles, 'css/ui-lightness/jquery-ui-1.12.1.custom.min.css')}"/>
<apex:stylesheet value="{!strURLtoCSSFile}" /> 

<script type="text/javascript">
    var j$ = jQuery.noConflict();

    j$(function() {
        j$("#dlgSignUp").dialog({modal: true, autoOpen: false, draggable: true, width: 400, resizeable: true });
        j$("#dlgThankYou").dialog({modal: true, autoOpen: false, draggable: true, width: 400, resizeable: true });

        // if there are errors, display the signup dialog.
        // we detect this by seeing if Salesforce inserted the error style on any item.        
        if (j$(".error").length > 0 || '{!JSENCODE(strSaveResult)}' != '') {
            j$('#dlgSignUp').dialog('open');
        } else if ('{!JSENCODE(volunteerHoursIdSignUp)}' != '') { // display thank you!
            j$('#dlgThankYou').dialog('open');      
        } 
         
    });
    
    function OpenSignUpDlg(JobId, ShiftId, JobName, ShiftName) {
        j$('input[name$=txtJobId]').val(JobId);                         
        j$('input[name$=txtShiftId]').val(ShiftId);                         
        j$('span[id$="txtJobDisplayName"]').text(JobName); 
        j$('span[id$="txtShiftDisplayName"]').text(ShiftName); 

        // The dialog position should be related to the Shift.
        var signUpButton;
        if (ShiftId == null) {
            signUpButton = j$('#' + JobId);
        }
        else {
            signUpButton = j$('#' + ShiftId);
        }
        
        var top = signUpButton.position().top + signUpButton.height() + ((signUpButton.outerHeight() - signUpButton.height()));
        j$('#dlgSignUp').dialog({
            position: {
                my: "center top+" + top,
                at: "center top",
                of: document,
                collision: "fit"
            }
        });

        j$('#dlgSignUp').dialog('open');

        return false;
    };
    
    function MyDateFormat(dt, strDateFormat) {
        var strDt = strDateFormat;
        strDt = strDt.replace('EEEE', '');  // server formatting supports this.  backward compat doesn't have to support it.
        strDt = strDt.replace('MM', ((dt.getMonth() < 9) ? ('0' + (dt.getMonth() + 1)) : (dt.getMonth() + 1)));
        strDt = strDt.replace('M', (dt.getMonth() + 1));
        strDt = strDt.replace('dd', ((dt.getDate() < 10) ? ('0' + dt.getDate()) : dt.getDate()));
        strDt = strDt.replace('d', (dt.getDate()));
        strDt = strDt.replace('yyyy', (dt.getFullYear()));
        strDt = strDt.replace('yy', (dt.getFullYear().toString().substring(2,4)));
        return strDt;
    }
    
    function MyTimeFormat(dt, strTimeFormat) {
        var strTm = strTimeFormat;
        var is12hrFormat = strTimeFormat.indexOf('h') >= 0;
        var includeAMPM = strTimeFormat.indexOf('tt') >= 0;
        var intHours = dt.getHours();
        var intMinutes = dt.getMinutes();
        var strAM = (intHours >= 12) ? 'pm' : 'am';
        if (!includeAMPM) strAM = '';
        if (intHours > 12 && is12hrFormat) intHours = intHours - 12;   
        if (is12hrFormat && intHours == 0) intHours = 12;   
        strTm = strTm.replace('hh', intHours < 10 ? ('0' + intHours) : intHours);
        strTm = strTm.replace('h', intHours);
        strTm = strTm.replace('HH', intHours < 10 ? ('0' + intHours) : intHours);
        strTm = strTm.replace('H', intHours);
        strTm = strTm.replace('mm', (intMinutes == 0) ? '00' : (intMinutes < 10 ? ('0' + intMinutes) : intMinutes));
        strTm = strTm.replace('m', (intMinutes == 0) ? '00' : intMinutes);
        strTm = strTm.replace('tt', strAM);     
        return strTm;   
    }

    // Starting in version 3.0, date time formatting is done in Apex on the server, but we still use this
    // for backward compatibility, if the System Note field hasn't been made visible on the Site's Guest User Profile,
    // which is the field we temporarily store the server datetime formatted string to use.
    function JobShiftDateTimeString(dt, duration) {
        var dtStart = new Date(dt);        

        // strDateFormat is a page parameter (set by the controller) that allows some simple date formatting.
        var strStartDate = MyDateFormat(dtStart, '{!JSENCODE(strDateFormat)}');
                
        // strTimeFormat is a page parameter (set by the controller) that allows some simple time formatting.
        var strStartTime = MyTimeFormat(dtStart, '{!JSENCODE(strTimeFormat)}');
        
        var dtEnd = new Date(dt);
        dtEnd.setMinutes(dtEnd.getMinutes() + (duration * 60));
        var strEndTime = MyTimeFormat(dtEnd, '{!JSENCODE(strTimeFormat)}');
        return strStartDate + ' ' + strStartTime + ' - ' + strEndTime;
    }      
      
</script>
    <apex:Messages style="color:red;" />            
    <apex:outputPanel rendered="{!fCalendar}" layout="block" style="text-align:right">
        <apex:outputLink value="{!$Site.CurrentSiteUrl + IF(fPersonalSite, 'GW_Volunteers__PersonalSiteJobCalendar', 'GW_Volunteers__JobCalendar') + '?' + strParams}" id="linkCal1" >{!$Label.labelReturnToCalendar}</apex:outputLink>
    </apex:outputPanel>

    <apex:repeat value="{!listVolunteerJobs}" var="job" id="rptJobs" >
        <apex:variable var="containerClass" value="{!IF(job.External_Signup_Url__c != null, 'externalJob', IF(jobAllShiftsInThePast, 'pastEvent', ''))}" />
        <div id="jobContainer" class="{!containerClass}">
        
        <apex:outputPanel rendered="{!ShowJobName}" ><p><apex:outputText value="{!job.Name}" styleClass="cssJobName" /></p></apex:outputPanel>
        <apex:outputPanel rendered="{!ShowDescription}" ><p><apex:outputField value="{!job.Description__c}" /></p></apex:outputPanel>
        <apex:outputPanel rendered="{!ShowSkills && job.Skills_Needed__c <> null}" >
            <p class="cssJobSkills" >{!$ObjectType.Contact.Fields.Volunteer_Skills__c.Label}:&nbsp;&nbsp;
            <apex:outputField value="{!job.Skills_Needed__c}" />
            </p>  
        </apex:outputPanel>
        <apex:outputPanel rendered="{!ShowLocationAddress && job.Location_Street__c <> null}" >
            <p class="cssJobLocationAddress">
            <apex:outputField value="{!job.Location_Street__c}" /><br/>
            <apex:outputField value="{!job.Location_City__c}" />,&nbsp;
            <apex:outputField value="{!job.Location__c}" />&nbsp;&nbsp;
            <apex:outputField value="{!job.Location_Zip_Postal_Code__c}" />
            <apex:outputPanel rendered="{!ShowLocationMap && strGoogleMapAPIKey <> null}">
                <p class="cssJobLocationMap">
                <iframe class="cssGoogleMapIFrame" 
                    src="https://www.google.com/maps/embed/v1/place?q={!job.Location_Street__c}+{!job.Location_City__c}+{!job.Location__c}+{!job.Location_Zip_Postal_Code__c}&key={!strGoogleMapAPIKey}">
                </iframe>
                </p>
            </apex:outputPanel>            
            </p>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!ShowLocationInfo && job.Location_Information__c <> null}">
            <p>
            <apex:outputField value="{!job.Location_Information__c}" />
            </p>
        </apex:outputPanel>
        
        <apex:outputPanel id="panelJobOnly" rendered="{!(job.Number_of_Shifts__c == 0 || ShowShifts == false) && job.External_Signup_Url__c == null}" >
            <input type="button" id="{!job.Id}" value="{!$Label.labelButtonSignUp}"  class="cssJobShiftSignup btn" onclick="OpenSignUpDlg('{!job.Id}', null, '{!JSENCODE(job.Name)}', ''); return false;"/>
        </apex:outputPanel>
        
        <apex:outputPanel id="panelExternalJob" rendered="{!job.External_Signup_Url__c != null && NOT(jobAllShiftsInThePast)}" >
            <apex:outputLink target="_blank" styleClass="externalJobLink" value="{!job.External_Signup_Url__c}" >{!$Label.labelExternalSignupUrl}</apex:outputLink>
            <br/><br/>
        </apex:outputPanel>

        <apex:outputPanel id="panelEventInThePast" rendered="{!jobAllShiftsInThePast}" >
            <apex:outputText value="{!$Label.labelEventInThePast}" />
            &nbsp;<apex:outputText rendered="{!job.First_Shift__c != null}" value="{!$Label.labelFirstShift}" />
            <apex:outputPanel rendered="{!job.First_Shift__c != null}" id="txtFirstShiftDate">
                <script>
                    var dt = new Date('{!job.First_Shift__c}');
                    var strFirstShift = MyDateFormat(dt, '{!JSENCODE(strDateFormat)}');
                    document.write(strFirstShift);
                </script>
            </apex:outputPanel>
        </apex:outputPanel>
        
        <apex:dataTable value="{!job.Volunteer_Job_Slots__r}" var="shift" id="rptShifts" columnClasses="cssJobShiftSignup" rendered="{!ShowShifts}" >
            <apex:column style="text-align:center;" >
                <apex:outputPanel rendered="{!shift.Number_of_Volunteers_Still_Needed__c != 0 && DATEVALUE(shift.Start_Date_Time__c) >= TODAY() && job.External_Signup_Url__c == null}" >
                    <a  id="{!shift.Id}"  href="SignUp" onclick="
                        var x = '{!JSENCODE(shift.System_Note__c)}';   
                        if (x == '') x = JobShiftDateTimeString('{!shift.Start_Date_Time__c}', '{!shift.Duration__c}');
                        OpenSignUpDlg('{!job.Id}', '{!shift.Id}', '{!JSENCODE(job.Name)}', x);
                        return false;"
                        >{!$Label.labelLinkSignUp}</a>
                </apex:outputPanel>
                <apex:outputText value="{!$Label.labelLinkFull}" style="font-style:italic;" 
                    rendered="{!BLANKVALUE(shift.Number_of_Volunteers_Still_Needed__c, -1) == 0 && DATEVALUE(shift.Start_Date_Time__c) >= TODAY()}" />
                <apex:outputText value="{!$Label.labelShiftClosed}" style="font-style:italic;" 
                    rendered="{!DATEVALUE(shift.Start_Date_Time__c) < TODAY()}" />
                &nbsp;&nbsp;&nbsp;
            </apex:column>
            <apex:column >
                <div id="txtShiftStartDateTime">
                    <script>
                        var strDT = '{!JSENCODE(shift.System_Note__c)}';
                        if (strDT == '') strDT = JobShiftDateTimeString('{!shift.Start_Date_Time__c}', '{!shift.Duration__c}'); 
                        document.write(strDT);
                    </script>&nbsp;&nbsp;&nbsp;
                </div>
            </apex:column>
            <apex:column rendered="{!ShowNumberAvailable}">
                <apex:outputText value="{!$Label.labelShiftNumbers}&nbsp;&nbsp;&nbsp;" escape="false">
                    <apex:param value="{!NULLVALUE(shift.Total_Volunteers__c, 0)} "/>
                    <apex:param value="{!NULLVALUE(shift.Number_of_Volunteers_Still_Needed__c, 0)}"/>
                </apex:outputText>
            </apex:column>
            <apex:column ><apex:outputField value="{!shift.Description__c}" /></apex:column>
        </apex:dataTable>
        <br/>
        <br/> 
        <apex:outputPanel rendered="{!NOT(fCalendar)}" ><hr/></apex:outputPanel>
        </div>
    </apex:repeat>
    <apex:outputText value="{!$Label.labelMessageNoJobs}" rendered="{!NOT(VolunteersHasJobs)}" />
    <apex:outputPanel rendered="{!fCalendar}" layout="block" style="text-align:right">
        <apex:outputLink value="{!$Site.CurrentSiteUrl + IF(fPersonalSite, 'GW_Volunteers__PersonalSiteJobCalendar', 'GW_Volunteers__JobCalendar') + '?' + strParams}" id="linkCal2" >{!$Label.labelReturnToCalendar}</apex:outputLink>     
    </apex:outputPanel>

<!-- this div contains the signup dialog we'll use jQuery to display -->
<div id="dlgSignUp" title="{!$Label.labelTitleJobSignup}">
    <apex:form styleClass="cssForm" id="frmSignUp" > 
        <apex:outputPanel id="panelSignUp" > 
            <table columns="2" >
                <!-- first we specify the fields we require for Contact matching -->
                <tr>
                    <td class="cssLabelsColumn" ><apex:outputLabel value="{!$ObjectType.Contact.Fields.FirstName.Label + '*'}" for="txtFirstName" /></td>
                    <td class="cssInputFieldsColumn" ><apex:inputField value="{!contact.FirstName}" id="txtFirstName" required="true" styleClass="cssInputFields" /></td>
                </tr>
                <tr>    
                    <td class="cssLabelsColumn" ><apex:outputLabel value="{!$ObjectType.Contact.Fields.LastName.Label + '*'}" for="txtLastName" /></td>
                    <td class="cssInputFieldsColumn" ><apex:inputField value="{!contact.LastName}" id="txtLastName" required="true" styleClass="cssInputFields" /></td>
                </tr>
                <tr>            
                    <td class="cssLabelsColumn" ><apex:outputLabel value="{!$ObjectType.Contact.Fields.Email.Label + '*'}" for="txtEmail" /></td>
                    <td class="cssInputFieldsColumn" ><apex:inputField value="{!contact.Email}" id="txtEmail" required="true" styleClass="cssInputFields" /></td>
                </tr>
                
                <!--  now add optional fields the user can specify for Contacts -->
                <apex:repeat value="{!$ObjectType.Contact.FieldSets.VolunteersJobListingFS}" var="f" >
                    <tr>
                        <td class="cssLabelsColumn" ><apex:outputLabel value="{!f.Label + IF(OR(f.DBRequired, f.Required), '*', '')}" /></td>
                        <td class="cssInputFieldsColumn" ><apex:inputField value="{!Contact[f]}" required="{!IF(OR(f.DBRequired, f.Required), 'true', 'false')}"
                            styleClass="{!IF(f.Type == 'Long Text Area', 'cssInputFields cssTextArea', 'cssInputFields')}" /></td>
                    </tr>
                </apex:repeat>        
        
                <!--  now add optional fields the user can specify for VolunteerHours -->
                <apex:repeat value="{!$ObjectType.Volunteer_Hours__c.FieldSets.VolunteersJobListingFS}" var="f" >
                    <tr>
                        <td class="cssLabelsColumn" ><apex:outputLabel value="{!f.Label + IF(OR(f.DBRequired, f.Required), '*', '')}" /></td>
                        <td class="cssInputFieldsColumn" ><apex:inputField value="{!vhours[f]}" required="{!IF(OR(f.DBRequired, f.Required), 'true', 'false')}"
                            styleClass="{!IF(f.Type == 'Long Text Area', 'cssInputFields cssTextArea', 'cssInputFields')}" /></td>
                    </tr>
                </apex:repeat>
                
                <!-- add optional File Upload -->
                <tr>            
                    <td class="cssLabelsColumn" ><apex:outputLabel value="{!strFileUploadLabel}" for="txtFileUpload" /></td>
                    <td class="cssInputFieldsColumn" ><apex:inputFile styleClass="cssInputFields" rendered="{!strFileUploadLabel!=null}" value="{!attachment.body}" filename="{!attachment.name}" id="txtFileUpload" /></td>
                </tr>                       
            </table>                             
            <apex:Messages style="color:red;" />       
            <p>         
            <apex:outputText value="{!strJobDisplayName}" id="txtJobDisplayName" styleClass="cssSignupDisplayName" style="border-style:none; background-color:transparent; width:100%;" /><br/>
            <apex:outputText value="{!strShiftDisplayName}" id="txtShiftDisplayName" styleClass="cssSignupDisplayName" style="border-style:none; background-color:transparent; width:100%;" /><br/>
            </p>
            
            <!-- before calling the action method, clear the return value fields so we can detect validation failures. -->                          
            <apex:commandButton value="{!$Label.labelButtonSignUp}" id="btnSignUp" onclick="
                    j$('input[name$=btnSignUp]').attr('disabled','disabled'); 
                    j$('input[name$=txtContactIdSignUp]').val(''); 
                    j$('input[name$=txtVHIdSignUp]').val('');
                    VolunteerShiftSignUp();
                    return false;" 
                immediate="false" status="statusSignUp" styleClass="cssButton btn" />              
            <apex:commandButton value="{!$Label.labelButtonCancel}" immediate="true" onclick="j$('#dlgSignUp').dialog('close');" action="{!CancelSignUp}" styleClass="cssButton btn" />            
            <apex:actionStatus startText="{! '  ' + $Label.labelMessageSaving}" stopText="" id="statusSignUp" startStyle="color:green; font-style:italic" stopStyle="color:black;" />                             
        </apex:outputPanel>
                
        <apex:actionFunction name="VolunteerShiftSignUp" action="{!VolunteerShiftSignUp}" status="statusSignUp" />         
        <apex:actionFunction name="ClearVolunteerHoursIdSignUp" action="{!ClearVolunteerHoursIdSignUp}" />      
        <apex:inputHidden value="{!jobIdSignUp}" id="txtJobId" />               
        <apex:inputHidden value="{!shiftIdSignUp}" id="txtShiftId" /><br/>  
        <apex:inputHidden value="{!contactIdSignUp}" id="txtContactIdSignUp" />
        <apex:inputHidden value="{!volunteerHoursIdSignUp}" id="txtVHIdSignUp" />
    </apex:form>  
</div> <!-- end of the signup dialog -->

<!-- this div contains the thank you dialog we'll use jQuery to display -->
<div id="dlgThankYou" title="{!$Label.labelTitleJobSignup}">
            <p class="cssThankYou">{!$Label.labelVolunteerSignupThankYou}</p>
            <input type="button" value="{!$Label.labelButtonClose}" onclick="j$('#dlgThankYou').dialog('close'); return false;" class="cssButton btn" />
</div> <!-- end of the thank you dialog -->

</apex:page>